@{
    ViewBag.Title = "Candidates";
}

@section AddToTextCss {
    .odd.table-override {
    color: black !important;
    background-color: rgba(23, 89, 157, 0.5) !important;
    }

    .even.table-override {
    color: black !important;
    background-color: white !important;
    }

    .odd.table-override > td[class*="sorting"] {
    color: white !important;
    background-color: rgb(23, 89, 157) !important;
    }

    .even.table-override > td[class*="sorting"] {
    color: black !important;
    background-color: white !important;
    }

    tr td:last-child {
    text-align: center;
    }
}
<div class="row-fluid">
    <!--Searching-->
    <div class="span12 panel panel-primary">
        <div class="panel-heading">
            <h2 class="panel-title">Candidate Search Parameters</h2>
        </div>
        <div class="panel-body">
            <form class="form-horizontal" id="search-form">
                <div class="row-fluid">
                    <div class="span4">
                        <div class="form-group">
                            <label for="FName" class="control-label span3">First Name</label>
                            <div class="span9">
                                <input type="text" class="form-control" name="FName" id="FName" />
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="form-group">
                            <label for="LName" class="control-label span3">Last Name</label>
                            <div class="span9">
                                <input type="text" class="form-control" name="LName" id="LName" />
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="form-group">
                            <label for="SSN" class="control-label span3">SSN</label>
                            <div class="span9">
                                <input type="text" class="form-control" name="SSN" id="SSN" />
                                <button type="button" id="toggle-params"><i class="fa fa-plus"></i> More</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid" id="more-params" style="display: none;">
                    <div class="span4">
                        <div class="form-group">
                            <label for="MName" class="control-label span3">Middle Name</label>
                            <div class="span9">
                                <input type="text" class="form-control" name="MName" id="MName" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Sex" class="control-label span3">Sex</label>
                            <div class="span9">
                                <select class="form-control" name="Sex" id="Sex">
                                    <option value="">--None--</option>
                                    <option value="M">M</option>
                                    <option value="F">F</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="form-group">
                            <label for="DOB" class="control-label span3">DOB</label>
                            <div class="span9">
                                <input type="text" class="form-control date" name="DOB" id="DOB" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EthnicityID" class="control-label span3">Ethnicity</label>
                            <div class="span9">
                                <select class="form-control" name="EthnicityID" id="EthnicityID">
                                    <option value="">--None--</option>
                                    @foreach (var e in ViewBag.ethnicities)
                                    {
                                        <option value="@e.EthnicityID">@e.EthnicityValue</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="SourcesID" class="control-label span3">Source</label>
                            <div class="span9">
                                <select class="form-control" name="SourcesID" id="SourcesID">
                                    <option value="">--None--</option>
                                    @foreach (var s in ViewBag.sources)
                                    {
                                        <option value="@s.SourcesID">@s.SourcesValue</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="form-group">
                            <label for="Suffix" class="control-label span3">Suffix</label>
                            <div class="span9">
                                <input type="text" class="form-control" name="Suffix" id="Suffix" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="FYG" class="control-label span3">FYG</label>
                            <div class="span9">
                                <input type="text" class="form-control" name="FYG" id="FYG" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Programs" class="control-label span3">Program</label>
                            <div class="span9">
                                <select class="form-control" name="Programs" id="Programs" multiple>
                                    @foreach (var p in ViewBag.programs)
                                    {
                                        <option value="@p.ProgramValue">@p.ProgramValue</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="button" class="pull-right" id="search"><i class="fa fa-search"></i> Search</button>
                <button type="button" class="pull-right btn-ignore btn-danger" id="clear-search">Clear</button>
            </form>
        </div>
    </div>
</div>
<div class="row-fluid">
    <!--Results table-->
    <div class="span12">
        <table id="search-results">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>DOB</th>
                    <th>SSN</th>
                    <th>Controls</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section AddToScripts {
    <script type="text/javascript">

        /**
         * Converts a serialized form array to a string that can be used for $filter
         * Returns: (String) string to use for $filter API string
         * Params:
         *  formArray - (Array) array of form objects with name and value
         *
         */
        function buildFilterString(formArray) {
            var ret = "";
            for (var i = 0; i < formArray.length; i++) {
                var item = formArray[i];
                if (item["value"] != "") {
                    if (i != 0 && ret != "") {
                        ret += " and ";
                    }
                    if (isNaN(item["value"])) {
                        ret += item["name"] + " eq '" + item["value"] + "'";
                    } else {
                        ret += item["name"] + " eq " + item["value"];
                    }
                }
            }
            return ret;
        }

        /**
         * Populates the DataTable
         * Params:
         *  obj - (Object) Object return from an API call
         */
        function populateTable(obj) {
            // Clear out table
            $("#search-results").dataTable().fnClearTable();
            // Add new rows
            for (var i = 0; i < obj.length; i++) {
                var bd = obj[i];
                var dob = moment(bd.DOB);
                dob = dob.format("MM/DD/YYYY");
                var url = "@Url.Action("Edit", "Candidates", new { id = "__id__"})";
                url = url.replace("__id__", bd.ID);
                var a = [bd.FName, bd.LName, dob, bd.SSN, "<a href='" + url + "' class='button' type='button'>Edit</a>"];
                $("#search-results").dataTable().fnAddData(a);
            }
            //Re-init buttons
            $("#search-results button:not(.btn-ignore)").button();
            $("#search-results a.button").button();
        }

        $(document).ready(function () {

            // Set datepicker
            $(".date").datepicker({
                changeYear: true,
                yearRange: "-90:+0"
            });

            $("#toggle-params").click(function () {
                $("#more-params").slideToggle(function () {
                    if ($("#toggle-params").text().trim() == "More") {
                        $("#toggle-params").button("option", "label", "<i class='fa fa-minus'></i> Less").button("refresh");
                    } else {
                        $("#toggle-params").button("option", "label", "<i class='fa fa-plus'></i> More").button("refresh");
                        //TODO: clear out hidden parameters
                    }
                });
            });

            $("#search-results").dataTable({
                "bJQueryUI": true,
                "bFilter": false,
                "fnDrawCallback": function (oSettings) {
                    for (var i = 0; i < oSettings.aoData.length; i++) {
                        oSettings.aoData[i].nTr.className += " " + "table-override";
                    }
                }
            });

            $("#search").click(function () {
                var form = $("#search-form");
                var filterStr = buildFilterString($(form).serializeArray());
                if (filterStr == "") {
                    // If empty, get all?
                } else {
                    // Make call to API
                    var obj = {
                        "$filter": filterStr
                    };
                    $.ajax({
                        url: "http://localhost:50741/api/BioData/GetBy?" + $.param(obj),
                        type: "Get",
                        success: function (data) {
                            console.log("success");
                            console.log(data);
                            populateTable(data);
                        },
                        error: function (data) {
                            console.log("error");
                            console.log(data);
                            console.log(data.responseText);
                        }
                    });
                }
            });

            $("#clear-search").click(function () {
                var formArray = $("#search-form").serializeArray();
                console.log(formArray);
                for (var i = 0; i < formArray.length; i++) {
                    $("#" + formArray[i]["name"]).val("");
                }
            });

            //Initial DataTable data is all biodatas
            $.ajax({
                url: "http://localhost:50741/api/BioData/GetAll/",
                type: "Get",
                success: function (data) {
                    console.log("success");
                    console.log(data);
                    populateTable(data);
                },
                error: function (data) {
                    console.log("error");
                    console.log(data);
                    console.log(data.responseText);
                }
            });

        });
    </script>
}